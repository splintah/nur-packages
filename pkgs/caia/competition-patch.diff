--- caia/zuniq/bin/competition.sh	1970-01-01 01:00:01.000000000 +0100
+++ caia/zuniq/bin/competition.sh	2020-08-16 20:17:41.972617429 +0200
@@ -5,7 +5,6 @@
 
 # Author: Wilmer van der Gaast <wilmer@gaast.net>
 
-BASE=$HOME/caia/zuniq
 STUBS=$BASE/competition-stubs
 RES=$BASE/competition-results
 
@@ -25,6 +24,11 @@
 players="$*"
 
 for player in $players; do
+    # Skip checks on sample players
+    if [[ "$player" =~ player[1,2,3] ]]; then
+        continue
+    fi
+
 	if [ ! -x $player ]; then
 		echo "$player doesn't appear to be a valid executable"
 		exit 1
@@ -36,6 +40,23 @@
 	fi
 done
 
+function realplayer {
+    case "$1" in
+        player1)
+            echo "$CAIA_BIN_DIR/player1"
+            ;;
+        player2)
+            echo "$CAIA_BIN_DIR/player2"
+            ;;
+        player3)
+            echo "$CAIA_BIN_DIR/player3"
+            ;;
+        *)
+            echo $1
+            ;;
+    esac
+}
+
 # Don't count the number of logical cores/threads. Although a competition
 # finishes slightly faster when using all (hyper)threads, it's only a 10-20%
 # improvement instead of the ~100% you'd expect. You just get threads tied
@@ -91,7 +112,11 @@
 						continue;;
 				esac;;
 		esac
-					
+
+        # Get the binaries for player{1,2,3}
+        rp1=$(realplayer $p1)
+        rp2=$(realplayer $p2)
+
 		scores=$RES/$p1-$p2.scores
 		scorefiles="$scorefiles $scores"
 		if [ -e "$scores" ] && [ "$scores" -nt "$p1" -a "$scores" -nt "$p2" ]; then
@@ -106,11 +131,11 @@
 
 cat<<EOF
 I number_players 2
-I player 1 $p1 $PLAYER_TIME_LIMIT $BASE/playerlogs/$p1.white.$p2.$i.log
+I player 1 $rp1 $PLAYER_TIME_LIMIT $BASE/playerlogs/$p1.white.$p2.$i.log
 I start 1
-I player 2 $p2 $PLAYER_TIME_LIMIT $BASE/playerlogs/$p2.black.$p1.$i.log
+I player 2 $rp2 $PLAYER_TIME_LIMIT $BASE/playerlogs/$p2.black.$p1.$i.log
 I start 2
-I referee $BASE/bin/referee $BASE/refereelogs/$p1-$p2.$i.log reflog.log
+I referee $CAIA_BIN_DIR/referee $BASE/refereelogs/$p1-$p2.$i.log reflog.log
 EOF
 read discard p1s p2s text
 if [ \$p1s -gt \$p2s ]; then
@@ -140,7 +165,7 @@
 if [ -n "$(ls $STUBS/*.sh 2> /dev/null)" ]; then # OSX-- xargs doesn't have -r
 	# Have xargs run caiaio with all the stub clients created above. The
 	# little- known flag -P tells it to run stuff in parallel.  :-D
-	ls $STUBS/*.sh | xargs -P$num_cores -n1 -- $BASE/bin/caiaio -m
+	ls $STUBS/*.sh | xargs -P$num_cores -n1 -- $CAIA_BIN_DIR/caiaio -m
 else
 	echo "No new matches to play."
 fi
